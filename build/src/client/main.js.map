{"version":3,"sources":["./src/environments/environment.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/pages/edit/edit.component.ts","./src/app/pages/edit/edit.component.html","./src/app/nav/nav.component.ts","./src/app/nav/nav.component.html","./src/app/pages/list/list.component.ts","./src/app/pages/list/list.component.html","./src/app/services/tasks.service.ts","./src/app/app-routing.module.ts","./src/app/pages/add/add.component.ts","./src/app/pages/add/add.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: true\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'client';\n}\n","<app-nav></app-nav>\n<div class=\"container\">\n  \n\n\n  <router-outlet></router-outlet>\n\n</div>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule } from '@angular/forms';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { ListComponent } from './pages/list/list.component';\nimport { AddComponent } from './pages/add/add.component';\nimport { EditComponent } from './pages/edit/edit.component';\nimport { NavComponent } from './nav/nav.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ListComponent,\n    AddComponent,\n    EditComponent,\n    NavComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    FormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { NgForm } from '@angular/forms';\nimport { TasksService } from '../../services/tasks.service';\n\nimport { TaskItem } from '../../models/Task.model';\n\n@Component({\n  selector: 'app-edit',\n  templateUrl: './edit.component.html',\n  styleUrls: ['./edit.component.css']\n})\nexport class EditComponent implements OnInit {\n\n\ttask: any = {\n\t\tname: '',\n\t\tdescription: '',\n\t\tmanager: '',\n\t\tasignated: '',\n\t\tstatus: ''\n\n\t};\n\n  constructor( \tprivate taskService: TasksService,\n  \t\t\t\tprivate router: Router,\n  \t\t\t\tprivate activatedRoute: ActivatedRoute) { }\n\n\n\n  ngOnInit(): void {\n\n  \tconst params = this.activatedRoute.snapshot.params;\n  \tif (params.id) {\n  \t\t// console.log(params.id)\n  \t\tthis.taskService.getTask(params.id)\n  \t\t\t.subscribe( res => {\n  \t\t\t\t// console.log(res)\n  \t\t\t\tthis.task = res;\n  \t\t\t})\n  \t}\n\n  }\n\n\n  updateTask( forma ) {\n\n  \tconsole.log(this.task.id, forma.value)\n  \tthis.taskService.updateTask(this.task.id, forma.value)\n  \t\t.subscribe(\n  \t\t\tres => {\n  \t\t\t\tconsole.log(res);\n          this.router.navigate(['/list']);\n  \t\t\t})\n\n  }\n\n}\n","\n<div class=\"container bg-light mt-3 pt-2 pb-5\">\n<form (ngSubmit)=\"updateTask( forma )\" #forma=\"ngForm\">\n  <div class=\"form-group\">\n    <label>Project name</label>\n    <input  type=\"text\"\n            class=\"form-control\"\n            name=\"name\"\n            [ngModel]=\"task.name\"\n            #name=\"ngModel\">\n  </div>\n\n  <div class=\"form-group\">\n    <label>Description</label>\n    <textarea   class=\"form-control\"\n                name=\"description\"\n                [ngModel]=\"task.description\"\n                #description=\"ngModel\"></textarea>\n  </div>\n\n  <div class=\"form-group\">\n    <label>Project manager</label>\n    <select   class=\"form-control\"\n          name=\"manager\"\n          [ngModel]=\"task.manager\"\n          #manager=\"ngModel\">\n      <option value=\"Juan\">Juan</option>\n      <option value=\"Marcos\">Marcos</option>\n      <option value=\"Carlos\">Carlos</option>\n    </select>\n  </div>\n\n  <div class=\"form-group\">\n    <label>Assigned to</label>\n    <select   class=\"form-control\"\n              name=\"asignated\"\n              [ngModel]=\"task.asignated\"\n              #asignated=\"ngModel\">\n      <option value=\"Pedro\">Pedro</option>\n      <option value=\"Marcos\">Marcos</option>\n      <option value=\"Pablo\">Pablo</option>\n    </select>\n  </div>\n\n  <div  class=\"form-group\">\n    <label>Status</label>\n    <select   class=\"form-control\"\n              name=\"status\"\n              [ngModel]=\"task.status\"\n              #status=\"ngModel\">\n      <option value=\"Pendiente\">Pendiente</option>\n      <option value=\"Producción\">Producción</option>\n      <option value=\"Cerrado\">Cerrado</option>\n    </select>\n  </div>\n\n  <button type=\"submit\" class=\"btn btn-danger mt-5\">Create project</button>\n\n</form>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-nav',\n  templateUrl: './nav.component.html',\n  styleUrls: ['./nav.component.css']\n})\nexport class NavComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","\n<nav class=\"navbar navbar-light bg-light\">\n  <div class=\"container\">\n      <img src=\"assets/images/logo.png\" alt=\"\"  height=\"24\">\n  </div>\n</nav>\n<nav class=\"navbar navbar-expand-lg navbar-light bg-light\">\n  <div class=\"container\">\n\n  \t<a href=\"#\" *ngIf=\"false\" class=\"nav-link\"><i class=\"fa fa-arrow-left\"></i> Back</a>\n\n    <span class=\"navbar-brand\"  routerLink=\"/list\">My project</span>\n      \n    <button class=\"btn btn-danger\" routerLink=\"/add\" type=\"button\"><i class=\"fa fa-plus\"></i> Add project</button>\n\n  </div>\n</nav>","import { Component, OnInit } from '@angular/core';\nimport { TasksService } from '../../services/tasks.service';\n\nimport { TaskItem } from '../../models/Task.model';\n\n@Component({\n  selector: 'app-list',\n  templateUrl: './list.component.html',\n  styleUrls: ['./list.component.css']\n})\nexport class ListComponent implements OnInit {\n\n\ttasks: any[] = [];\n\n\n  constructor( private taskService: TasksService ) {\n\n  \t\n\n  }\n\n  ngOnInit(): void {\n\n  \tthis.getTasks();\n\n  }\n\n  getTasks() {\n  \tthis.taskService.getTasks()\n  \t\t.subscribe( (res: any) => {\n\n  \t\t\t//opcion para abrir menu\n  \t\t\t// Object.keys(res).forEach( (valor: any) => { \n     //      valor.menu = false;\n     //      valor.delete = false;\n     //     } );\n\n  \t\t\tconsole.log(res);\n  \t\t\tthis.tasks = res; \n  \t\t})\n  }\n\n\n  deleteTask(id: string ) {\n    // console.log(id)\n    this.taskService.deleteTask(id)\n      .subscribe(\n        res => {\n          this.getTasks();\n        })\n  }\n\n}\n","<div class=\"list-group mt-3\">\n\n  <div class=\"item\" *ngFor=\"let item of tasks\">\n\n    <div class=\"list-group-item list-group-item-action\" aria-current=\"true\">\n      <div class=\"d-flex w-100 justify-content-between\">\n        <h5 class=\"mb-1\">{{item.name}}</h5>\n        <small class=\"openmenu\" (click)=\"item.menu=!item.menu\"><i class=\"fa fa-bars\"></i></small>\n      </div>\n      <small class=\"text-muted\">Creation date: {{ item.date | date:'short' }}</small>\n      <p class=\"mb-1\">{{item.asigned}}</p>  \n\n    </div>\n\n    <div class=\"menu\" *ngIf=\"item.menu\">\n      <div class=\"menuitem editar\" routerLink=\"/edit/{{ item.id }}\"><i class=\"fa fa-pencil-square-o\"></i> Edit</div>\n      <div class=\"menuitem editar\" (click)=\"item.delete=!item.delete\"><i class=\"fa fa-trash-o\"></i> Delete</div>\n    </div>\n\n    <div class=\"deleteDiv alert alert-danger\" *ngIf=\"item.delete\">\n      <span class=\"w-100\">Confirm delete this task?!</span>\n      <button type=\"button\" (click)=\"deleteTask(item.id)\" class=\"btn btn-sm btn-danger w-50\">YES</button>\n      <button type=\"button\" (click)=\"item.delete=!item.delete; item.menu=!item.menu\" class=\"btn btn-sm btn-outline-danger w-50\">NO</button>\n    </div>\n\n\n  </div>\n\n\n</div>\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { TaskItem } from '../models/Task.model';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TasksService {\n\n  API_URI = 'http://localhost:3000/api/v1/tasks';\n\n  constructor( private http: HttpClient ) {   }\n\n\n  \tgetTasks() {\n\t\treturn this.http.get(this.API_URI)\n\t}\n\n\tgetTask(id: string) {\n\t\treturn this.http.get(`${this.API_URI}/${id}`)\n\t}\n\n\tsaveTask( task: TaskItem ) {\n\t\treturn this.http.post(this.API_URI, task);\n\t}\n\n\tupdateTask( id: number|string, updatedTask: TaskItem) {\n\t\treturn this.http.put(`${this.API_URI}/${id}`, updatedTask)\n\t}\n\n\tdeleteTask(id: string) {\n\t\treturn this.http.delete(`${this.API_URI}/${id}`)\n\t}\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { ListComponent } from './pages/list/list.component';\nimport { AddComponent } from './pages/add/add.component';\nimport { EditComponent } from './pages/edit/edit.component';\n\nconst routes: Routes = [\n\t{ path: 'list', component: ListComponent },\n\t{ path: 'add', component: AddComponent },\n\t{ path: 'edit/:id', component: EditComponent },\n\t{ path: '**', pathMatch: 'full', redirectTo: 'list' },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, { useHash: true })],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { NgForm } from '@angular/forms';\nimport { TasksService } from '../../services/tasks.service';\n\nimport { TaskItem } from '../../models/Task.model';\n\n@Component({\n  selector: 'app-add',\n  templateUrl: './add.component.html',\n  styleUrls: ['./add.component.css']\n})\nexport class AddComponent implements OnInit {\n\n\ttask: TaskItem = {\n\t\tname: '',\n\t\tdescription: '',\n\t\tmanager: '',\n\t\tasignated: '',\n\t\tstatus: ''\n\n\t};\n\n  constructor(\tprivate taskService: TasksService,\n  \t\t\t\tprivate router: Router) { }\n\n  ngOnInit(): void {\n  }\n\n\n  saveTask( forma: NgForm ) {\n\n  \t// console.log(forma);\n  \tconsole.log(forma.value);\n  \tthis.taskService.saveTask(forma.value)\n  \t\t.subscribe( res => {\n  \t\t\tconsole.log(res);\n  \t\t\tthis.router.navigate(['/list']);\n  \t\t})\n\n  }\n\n}\n","\n<div class=\"container bg-light mt-3 pt-2 pb-5\">\n<form (ngSubmit)=\"saveTask( forma )\" #forma=\"ngForm\">\n  <div class=\"form-group\">\n    <label>Project name</label>\n    <input  type=\"text\"\n            class=\"form-control\"\n            name=\"name\"\n            [ngModel]=\"task.name\"\n            #name=\"ngModel\">\n  </div>\n\n  <div class=\"form-group\">\n    <label>Description</label>\n    <textarea   class=\"form-control\"\n                name=\"description\"\n                [ngModel]=\"task.description\"\n                #description=\"ngModel\"></textarea>\n  </div>\n\n  <div class=\"form-group\">\n    <label>Project manager</label>\n    <select   class=\"form-control\"\n          name=\"manager\"\n          [ngModel]=\"task.manager\"\n          #manager=\"ngModel\">\n      <option value=\"Juan\">Juan</option>\n      <option value=\"Marcos\">Marcos</option>\n      <option value=\"Carlos\">Carlos</option>\n    </select>\n  </div>\n\n  <div class=\"form-group\">\n    <label>Assigned to</label>\n    <select   class=\"form-control\"\n              name=\"asignated\"\n              [ngModel]=\"task.asignated\"\n              #asignated=\"ngModel\">\n      <option value=\"Pedro\">Pedro</option>\n      <option value=\"Marcos\">Marcos</option>\n      <option value=\"Pablo\">Pablo</option>\n    </select>\n  </div>\n\n  <div  class=\"form-group\">\n    <label>Status</label>\n    <select   class=\"form-control\"\n              name=\"status\"\n              [ngModel]=\"task.status\"\n              #status=\"ngModel\">\n      <option value=\"Pendiente\">Pendiente</option>\n      <option value=\"Producción\">Producción</option>\n      <option value=\"Cerrado\">Cerrado</option>\n    </select>\n  </div>\n\n  <button type=\"submit\" class=\"btn btn-danger mt-5\">Create project</button>\n\n</form>\n</div>","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}